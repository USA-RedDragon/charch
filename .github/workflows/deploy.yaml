name: Deploy Charch in LAN

on:
  push:
    branches:
      - master
  schedule:
  - cron: "0 1,6,12,18 * * *"

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install build dependencies
        run: |
          sudo apt update
          sudo apt install -y cpio zstd xorriso syslinux syslinux-common isolinux

      - name: Place sensitive configs in place
        id: add-creds
        run: |
          echo "${ADGUARD_EXPORTER}" | base64 -d > configs/etc/default/adguard-exporter
          echo "${REDWALL}" | base64 -d > configs/etc/default/redwall
          echo "${ADGUARD_HOME}" | base64 -d > configs/var/lib/adguardhome/AdGuardHome.yaml
        env:
          ADGUARD_EXPORTER: ${{ secrets.ADGUARD_EXPORTER }}
          REDWALL: ${{ secrets.REDWALL }}
          ADGUARD_HOME: ${{ secrets.ADGUARD_HOME }}

      - name: Build for deploy
        run: scripts/build.sh

      - name: Copy artifact to PXE server and deploy
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan 192.168.1.25 >> ~/.ssh/known_hosts
          echo "${ISO_COPY_PRIVATE_KEY}" > ~/.ssh/id_iso_copy
          chmod 600 ~/.ssh/id_iso_copy
          ssh-keygen -y -f ~/.ssh/id_iso_copy > ~/.ssh/id_iso_copy.pub
          cat >> ~/.ssh/config <<END
          Host pxe
            HostName ${SSH_HOST}
            User ${SSH_USER}
            IdentityFile ~/.ssh/id_iso_copy
          END
          scp charchlive.iso pxe:/var/lib/vz/template/iso/charchlive-firewall.iso
          ssh pxe qm reset 107
        env:
          SSH_USER: ${{ secrets.ISO_COPY_USER }}
          ISO_COPY_PRIVATE_KEY: ${{ secrets.ISO_COPY_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.ISO_COPY_SSH_HOST }}
