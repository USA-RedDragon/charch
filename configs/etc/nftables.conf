#!/usr/bin/nft -f

flush ruleset

include "/etc/nftables/public_ip.nft"

define internal_network = 192.168.1.0/24
define nginx_server = 192.168.1.19

table inet filter {
  chain trace_chain {
    type filter hook prerouting priority -1;
    meta nftrace set 1
  }

  chain input {
    type filter hook input priority 0; policy drop;

    # early drop of invalid connections
    ct state invalid counter drop
    # allow established/related connections
    ct state {established, related} accept
    tcp dport {80, 443, 6443} counter accept
    # Allow from internal network
    iifname lan accept
    # allow icmp
    ip protocol icmp counter accept
    counter reject
  }

  chain forward {
    type filter hook forward priority 0;

    # Allow incoming on wan for related & established
    # connections
    ct state related, established accept
    ct status dnat accept
    # Allow outgoing via wan
    oifname wan accept
    # Allow outgoing via lo
    oifname lo counter accept
    # Drop any other incoming traffic on wan
    iifname wan counter drop
  }

  chain output {
    type filter hook output priority 0;
  }
}

table ip nat {
  chain trace_chain {
    type nat hook prerouting priority -1;
    meta nftrace set 1
  }

  chain prerouting {
    type nat hook prerouting priority 0;

    # Nat loopback
    iifname lan ip daddr $public_ip tcp dport {80, 443, 6443} dnat $nginx_server

    # Forward traffic from wan to a LAN server
    iifname wan tcp dport {80, 443, 6443} dnat $nginx_server comment "Nginx port forwarding"
  }

  chain postrouting {
    type nat hook postrouting priority 0;

    ip saddr $internal_network ip daddr $nginx_server tcp dport {80, 443, 6443} masquerade

    # Masquerade outgoing traffic
    oifname wan ip saddr $internal_network masquerade
  }
}
